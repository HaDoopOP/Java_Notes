
在软件开发过程中，有很多obj有且只需要有一个。
比如日志文件，线程池，cache等等。 若创造出多个instance，会出现很多问题。
保证一个program只有一个instance，就用到了单例模式。


常用的singleton就两种：懒汉和饿汉

1.饿汉模式
public class Singleton{
  //为了只能被获取一个instance，要修改constructor
  private Singleton(){
   //外界不能call了，故不会被创建多个instance
   //通过将构造方法私有化
  }
  
  
}

public class Main {
  public static oid main(String[] args) {
  new Singleton(); //create an instance
  }
{
